'use strict';
var https = require('https');
var queryString=require('querystring');
var http = require('http');
var VERIFY_TOKEN = "my_bartbot_token";
var PAGE_TOKEN="EAAPL9aGq4BUBAPXAcpBrRlt8fjaAmbV9ESzG1PxEAAYrfAx6tr65682zyKszgBYIHQPyHNJ3Bc2IElZCZC6Ms4aR1zjozoV0TEe6wGibmnOXT4h1ZBw3j0Om2zzATxKmefmfniPB7ZCyATwZBQGQu2JP8vTOpUlgt88nkxnZAzOgZDZD";
exports.handler = (event, context, callback) => {
 
  // process GET request
  if(event.params && event.params.querystring){
    var queryParams = event.params.querystring;
    var rVerifyToken = queryParams['hub.verify_token'];
     if (rVerifyToken === VERIFY_TOKEN) {
      var challenge = queryParams['hub.challenge'];
      callback(null, parseInt(challenge));
    }else{
      callback(null, 'Error, wrong validation token');
    }
  }
  else{
var messagingEvents = event.entry[0].messaging;
     console.log("Events are "+ JSON.stringify(event,null,2));

    for (var i = 0; i < messagingEvents.length; i++) {
      var messagingEvent = messagingEvents[i];
      var sender = messagingEvent.sender.id;
//      console.log("Title is "+ messagingEvent.message.attachments[0].title);
  //    console.log("Sequence is "+ messagingEvent.message.seq);
      if (messagingEvent.message && messagingEvent.message.text) {
        var text = messagingEvent.message.text; 
        console.log("Receive a message: " + text);
        
        if(text.indexOf("ello") > -1){
       
        
            getUserdetails(sender);
            
        }
        
      else {
        
       console.log("getting departure trains for text-"+text);
       findStationAndTrain(sender, text);
        }
        callback(null, "Done");
      }
      
    }
 
    callback(null, event);
  }
};

// For recieving user information
function getUserdetails(senderFbId) {
 var path = '/v2.6/'+senderFbId+'?fields=first_name,last_name,profile_pic,locale,timezone,gender&access_token='+PAGE_TOKEN+'';
  var options = {
    host: "graph.facebook.com",
    path: path,
    method: 'GET',
    json:true
    
  };
  var callback = function(response) {
    var str = ''
    response.on('data', function (chunk) {
      str += chunk;
    });
   
    response.on('end', function () {
        console.log("str recieved"+ str);
       var userInfo=JSON.parse(str);
        console.log("userInfo is ::"+ userInfo.first_name);
         var prefix="";
        if(userInfo.gender == "male"){
            prefix="Mr. "
        }
        else if(userInfo.gender == "female"){
            prefix="Ms. "
        }
        sendTextMessage(senderFbId, "Hello "+prefix+ userInfo.first_name  +" - I am your Assistant@Travel");
    });
  }
  var req = https.request(options, callback);
  req.on('error', function(e) {
    console.log('problem with request: '+ e);
  });

  req.end();
  
}

// Send text message
function sendTextMessage(senderFbId, text) {
  var json = {
    recipient: {id: senderFbId},
    message: {text: text},
  };
  var body = JSON.stringify(json);
  var path = '/v2.6/me/messages?access_token=' + PAGE_TOKEN;
  var options = {
    host: "graph.facebook.com",
    path: path,
    method: 'POST',
    headers: {'Content-Type': 'application/json'}
  };
  var callback = function(response) {
    var str = ''
    response.on('data', function (chunk) {
      str += chunk;
    });
   
    response.on('end', function () {
 
    });
  }
  var req = https.request(options, callback);
  req.on('error', function(e) {
    console.log('problem with request: '+ e);
  });
 console.log("response body"+ body);
  req.write(body);
  req.end();
}

// Make a call to bart API to find departure trains 
function getDepartureTrains(senderFbId,intent,orig) {
 var path = '/?cmd='+intent+'&orig='+orig;
  var options = {
    host: "default-environment.m7vvzpkzcf.us-west-2.elasticbeanstalk.com",
    path: path,
    method: 'GET',
    json:true
    
  };
  var callback = function(response) {
    var str = ''
    response.on('data', function (chunk) {
      str += chunk;
    });
   
    response.on('end', function () {
       // console.log("str recieved"+ str);
       var json=JSON.parse(str);
       //console.log("Bart uri call made for ::"+ json.root.uri);
       //console.log(json.root.station[0].name);
     //  console.log("ETD value is "+ json.root.station[0].etd[0]);
       
      var etdObj=json.root.station[0].etd;
      console.log("ETD is "+ etdObj);
      var text="";
      for(var i=0;i<etdObj.length;i++){
          text=text+"Trains to "+etdObj[i].destination +": ";
         // console.log("concat "+text);
          var estimateObj=etdObj[i].estimate;
          for(var j=0;j<estimateObj.length;j++){
              text=text+estimateObj[j].minutes+"m, ";
            //  console.log("estimates"+text);
          }
          text=text+"\n";
      }
      
        sendTextMessage(senderFbId,text);
    });
  }
  var req = http.request(options, callback);
  console.log(req);
  req.on('error', function(e) {
    console.log('problem with request: '+ e);
  });

  req.end();
  
}

// Make a call to bart API to find departure trains 
//Bad code, Temproary testing
function findStationAndTrain(senderFbId,text) {
 var path = '/?cmd=stns';
  var options = {
    host: "default-environment.m7vvzpkzcf.us-west-2.elasticbeanstalk.com",
    path: path,
    method: 'GET',
    json:true
    
  };
  var callback = function(response) {
    var str = ''
    response.on('data', function (chunk) {
      str += chunk;
    });
   
    response.on('end', function () {
        console.log("response to stations call");
       // console.log("str recieved"+ str);
       var json=JSON.parse(str);
      var stationObj=json.root.stations[0].station;
      console.log("stationObj is "+ stationObj);
      var orig="";
      for(var i=0;i<stationObj.length;i++){
         // console.log("station name:"+stationObj[i].name);
         if(text.toLowerCase().indexOf(stationObj[i].name.toString().toLowerCase() )>-1){
             orig=stationObj[i].name;
             break;
         }
      }
         if(orig!==""){
             console.log("origin is: "+orig);
            //escape spaces
             orig=queryString.escape(orig);
             getDepartureTrains(senderFbId,"etd",orig);
         }
         else{
             sendTextMessage(senderFbId,"- "+ "Try with city name");
             
         }

      
    });
  }
  var req = http.request(options, callback);
  console.log(req);
  req.on('error', function(e) {
    console.log('problem with request: '+ e);
  });

  req.end();
  
}